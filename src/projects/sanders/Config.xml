<?xml version="1.0" encoding="UTF-8"?>
<Document>
	<Framework>
		<!--***********************************************************************-->
		<!--  Simulation Area                                                      -->
		<!--***********************************************************************-->
		<!--Number of dimensions (2 for 2D, 3 for 3D)-->
		<dimensions value="2" />

		<!--Length of the deployment field along the x-axis.-->
		<dimX value="1000" />

		<!--Length of the deployment field along the y-axis.-->
		<dimY value="1000" />

		<!--Length of the deployment field along the z-axis.-->
		<dimZ value="500" />

		<!--***********************************************************************-->
		<!--  Simulation                                                           -->
		<!--***********************************************************************-->
		<!--Switches between synchronous and asynchronous mode.-->
		<asynchronousMode value="false" />

		<!--If set to true, the runtime obtains for each node a new position from the mobility model at the beginning of each round. This flag needs to be turned on if the chosen  mobility model of any node may change the node's position. Set this flag to FALSE for static graphs whose nodes do never change their position to increase performance.-->
		<mobility value="false" />

		<!--If set to true, the chosen interference model is called at the end of every round to test for interferring packets. To increase performance, set this flag to FALSE if you do not consider interference.-->
		<interference value="false" />

		<!--Set this flag to true if interference only decreases if  less messages are being sent and increases if more messages are being sent. This flag enables considerable optimizations. -->
		<interferenceIsAdditive value="true" />

		<!--Set this flag to true if a node can receive messages while it is sending messages itself, otherwise to false. This flag is only relevant if interference is turned on, and it must be handled properly in the used interference model.-->
		<canReceiveWhileSending value="true" />

		<!--The default type of edges to be used-->
		<edgeType value="sinalgo.nodes.edges.Edge" />

		<!--If set to true, the application exits as soon as the termination criteria is met. This flag only affects the GUI mode.-->
		<exitOnTerminationInGUI value="false" />

		<!--If set true, in asynchronous mode the connections are initialized before the first event executes. Note that this flag is useless in synchronous mode as the connections are updated in every step anyway.-->
		<initializeConnectionsOnStartup value="false" />

		<!--Defines how often the GUI is updated. The GUI is redrawn after every refreshRate-th round.-->
		<refreshRate value="1" />

		<!--***********************************************************************-->
		<!--  Random number generators                                             -->
		<!--***********************************************************************-->
		<!--If set to true, the random number generators of the framework use a fixed seed.-->
		<useFixedSeed value="false" />

		<!--The seed to be used by the random number generators if useFixedSeed is set to true.-->
		<fixedSeed value="77654767234" />

		<!--***********************************************************************-->
		<!--  Logging                                                              -->
		<!--***********************************************************************-->
		<!--Name of the default log file, used by the system, but also for use by the end-user. (This log file is stored under sinalgo.runtime.Global.log.)-->
		<logFileName value="logfile.txt" />

		<!--Redirects the default log file to the console. No logfile will be created if set to true.-->
		<outputToConsole value="true" />

		<!--Indicates whether all log-files of the current simulation  are stored in a new directory. The name of the new directory is given by the string-representation of the date when the simulation starts.-->
		<logToTimeDirectory value="true" />

		<!--If set to true, the system configuration is written to the default log file after the application has been started.-->
		<logConfiguration value="true" />

		<!--If set to true, the log files are flushed every time a new log is added.-->
		<eagerFlush value="false" />

		<!--***********************************************************************-->
		<!--  GUI                                                                  -->
		<!--***********************************************************************-->
		<!--If true, the application shows an extended control panel.-->
		<extendedControl value="true" />

		<!--If true, the graph edges are drawn as directed arrows,  otherwise simple lines.-->
		<drawArrows value="false" />

		<!--Fraction of the old and new zoom values for a zoom step.-->
		<zoomStep value="1.2" />

		<!--Fraction of the old and new zoom values for a zoom  step when zooming with the mouse wheel.-->
		<wheelZoomStep value="1.05" />

		<!--The minimum required zoom-->
		<minZoomFactor value="0.05" />

		<!--If set to true, the nodes are ordered according to their  elevation before drawing, such that nodes closer to the  viewer are drawn on top. This setting only applies to 3D.-->
		<draw3DGraphNodesInProperOrder value="true" />

		<!--If set to true and in 3D mode, the cube is drawn with perspective.-->
		<usePerspectiveView value="true" />

		<!--Factor that defines the distance of the observer from the cube when useing the perspective view in 3D. Default: 30-->
		<perspectiveViewDistance value="40" />

		<!--***********************************************************************-->
		<!--  Background map in 2D                                                 -->
		<!--***********************************************************************-->
		<!--If set to true, the background of a 2D simulation is colored according to a map, specified in a map-file, specified by the field map-->
		<useMap value="false" />

		<!--In 2D, the background can be colored depending on a map file. This field contains the file name for this map, which is supposed to be located in the source folder of the current project. The map is only painted if useMap is set to true.-->
		<map value="images/map.jpg" />

		<!--***********************************************************************-->
		<!--  Models                                                               -->
		<!--***********************************************************************-->
		<!--The message transmission model used when none is specified-->
		<DefaultMessageTransmissionModel value="ConstantTime" />

		<!--Default connectivity model used when none is specified-->
		<DefaultConnectivityModel value="sanders:FullGraph" />

		<!--Default distribution model used when none is specified-->
		<DefaultDistributionModel value="Grid2D" />

		<!--Default interference model used when none is specified-->
		<DefaultInterferenceModel value="NoInterference" />

		<!--Default mobility model used when none is specified-->
		<DefaultMobilityModel value="NoMobility" />

		<!--Default reliability model used when none is specified-->
		<DefaultReliabilityModel value="ReliableDelivery" />

		<!--Default node implementation used when none is specified-->
		<DefaultNodeImplementation value="sanders:SandersNode" />

		<!--***********************************************************************-->
		<!--  Node storage, position transformation                                -->
		<!--***********************************************************************-->
		<!--Transformation implementation for 2D. (This is used to translate between the logic positions used by the simulation to the 2D coordinate system used by the GUI to display the graph)-->
		<guiPositionTransformation2D value="sinalgo.gui.transformation.Transformation2D" />

		<!--Transformation implementation for 3D. (This is used to translate between the logic positions used by the simulation to the 2D coordinate system used by the GUI to display the graph)-->
		<guiPositionTransformation3D value="sinalgo.gui.transformation.Transformation3D" />

		<!--Node collection implementation for 2D.-->
		<nodeCollection2D value="sinalgo.runtime.nodeCollection.Geometric2DNodeCollection" />

		<!--Node collection implementation for 3D.-->
		<nodeCollection3D value="sinalgo.runtime.nodeCollection.Geometric3DNodeCollection" />

		<!--***********************************************************************-->
		<!--  Diverse Settings                                                     -->
		<!--***********************************************************************-->
		<!--Show hints on how to further optimize the simulation when some parameters seem not to be set optimally.-->
		<showOptimizationHints value="true" />

		<!--Indicates whether the edges are drawn in the default draw implementation for the graph.-->
		<drawEdges value="true" />

		<!--Indicates whether the nodes are drawn in the default draw implementation for the graph.-->
		<drawNodes value="true" />

		<!--The number of future events that are shown in the control panel-->
		<shownEventQueueSize value="10" />

		<!--The length of the arrows. This length is multiplied by the actualzoomLevel.-->
		<arrowLength value="8" />

		<!--The width of the arrows. This width is multiplied by the actualzoomLevel.-->
		<arrowWidth value="1" />

		<!--The dsfault value of the rounds field.-->
		<defaultRoundNumber value="1" />

		<!--EPS 2 PDF command: This is the command that is used to convert an EPS file  into a PDF file. You can use the following parameters:   %s is the complete path from the root folder of the      framework to the SOURCE file (the eps)   %t is the complete path from the root folder of the      framework to the TARGET file (the pdf) These placeholders are set by the framework. Example:   'epstopdf %s')-->
		<epsToPdfCommand value="epstopdf %s" />

		<!--Indicates whether the background in the ps should be  white or gray.  The gray version is easier to understand (especially in 3D) but the white one should be more useful to be imported in reports.-->
		<epsDrawBackgroundWhite value="true" />

	</Framework>
	<Custom>
		<MessageTransmission ConstantTime="1"/>

		<Node defaultSize="10" />

		<GeometricNodeCollection rMax="1000000"/>

		<UDG rMax="100"/>

		<SINR alpha="2" beta="0.7" noise="0"/>

		<RandomWayPoint>
			<Speed distribution="Gaussian" mean="10" variance="20" />
			<WaitingTime distribution="Poisson" lambda="10" />
		</RandomWayPoint>

		<RandomDirection>
			<NodeSpeed distribution="Gaussian" mean="10" variance="20" />
			<WaitingTime distribution="Poisson" lambda="10" />
			<MoveTime distribution="Uniform" min="5" max="20" />
		</RandomDirection>

		<QUDG rMin="30" rMax="50" ProbabilityType="constant" connectionProbability="0.6"/>
		
		<Sanders pDelay="0.05" pRequest="0.05" pRelease="0.80" s1="1,2,3,4,5,6,7,8,9,17,25,33,41,49,57" s2="1,2,3,4,5,6,7,8,10,18,26,34,42,50,58" s3="1,2,3,4,5,6,7,8,11,19,27,35,43,51,59" s4="1,2,3,4,5,6,7,8,12,20,28,36,44,52,60" s5="1,2,3,4,5,6,7,8,13,21,29,37,45,53,61" s6="1,2,3,4,5,6,7,8,14,22,30,38,46,54,62" s7="1,2,3,4,5,6,7,8,15,23,31,39,47,55,63" s8="1,2,3,4,5,6,7,8,16,24,32,40,48,56,64" s9="1,9,10,11,12,13,14,15,16,17,25,33,41,49,57" s10="2,9,10,11,12,13,14,15,16,18,26,34,42,50,58" s11="3,9,10,11,12,13,14,15,16,19,27,35,43,51,59" s12="4,9,10,11,12,13,14,15,16,20,28,36,44,52,60" s13="5,9,10,11,12,13,14,15,16,21,29,37,45,53,61" s14="6,9,10,11,12,13,14,15,16,22,30,38,46,54,62" s15="7,9,10,11,12,13,14,15,16,23,31,39,47,55,63" s16="8,9,10,11,12,13,14,15,16,24,32,40,48,56,64" s17="1,9,17,18,19,20,21,22,23,24,25,33,41,49,57" s18="2,10,17,18,19,20,21,22,23,24,26,34,42,50,58" s19="3,11,17,18,19,20,21,22,23,24,27,35,43,51,59" s20="4,12,17,18,19,20,21,22,23,24,28,36,44,52,60" s21="5,13,17,18,19,20,21,22,23,24,29,37,45,53,61" s22="6,14,17,18,19,20,21,22,23,24,30,38,46,54,62" s23="7,15,17,18,19,20,21,22,23,24,31,39,47,55,63" s24="8,16,17,18,19,20,21,22,23,24,32,40,48,56,64" s25="1,9,17,25,26,27,28,29,30,31,32,33,41,49,57" s26="2,10,18,25,26,27,28,29,30,31,32,34,42,50,58" s27="3,11,19,25,26,27,28,29,30,31,32,35,43,51,59" s28="4,12,20,25,26,27,28,29,30,31,32,36,44,52,60" s29="5,13,21,25,26,27,28,29,30,31,32,37,45,53,61" s30="6,14,22,25,26,27,28,29,30,31,32,38,46,54,62" s31="7,15,23,25,26,27,28,29,30,31,32,39,47,55,63" s32="8,16,24,25,26,27,28,29,30,31,32,40,48,56,64" s33="1,9,17,25,33,34,35,36,37,38,39,40,41,49,57" s34="2,10,18,26,33,34,35,36,37,38,39,40,42,50,58" s35="3,11,19,27,33,34,35,36,37,38,39,40,43,51,59" s36="4,12,20,28,33,34,35,36,37,38,39,40,44,52,60" s37="5,13,21,29,33,34,35,36,37,38,39,40,45,53,61" s38="6,14,22,30,33,34,35,36,37,38,39,40,46,54,62" s39="7,15,23,31,33,34,35,36,37,38,39,40,47,55,63" s40="8,16,24,32,33,34,35,36,37,38,39,40,48,56,64" s41="1,9,17,25,33,41,42,43,44,45,46,47,48,49,57" s42="2,10,18,26,34,41,42,43,44,45,46,47,48,50,58" s43="3,11,19,27,35,41,42,43,44,45,46,47,48,51,59" s44="4,12,20,28,36,41,42,43,44,45,46,47,48,52,60" s45="5,13,21,29,37,41,42,43,44,45,46,47,48,53,61" s46="6,14,22,30,38,41,42,43,44,45,46,47,48,54,62" s47="7,15,23,31,39,41,42,43,44,45,46,47,48,55,63" s48="8,16,24,32,40,41,42,43,44,45,46,47,48,56,64" s49="1,9,17,25,33,41,49,50,51,52,53,54,55,56,57" s50="2,10,18,26,34,42,49,50,51,52,53,54,55,56,58" s51="3,11,19,27,35,43,49,50,51,52,53,54,55,56,59" s52="4,12,20,28,36,44,49,50,51,52,53,54,55,56,60" s53="5,13,21,29,37,45,49,50,51,52,53,54,55,56,61" s54="6,14,22,30,38,46,49,50,51,52,53,54,55,56,62" s55="7,15,23,31,39,47,49,50,51,52,53,54,55,56,63" s56="8,16,24,32,40,48,49,50,51,52,53,54,55,56,64" s57="1,9,17,25,33,41,49,57,58,59,60,61,62,63,64" s58="2,10,18,26,34,42,50,57,58,59,60,61,62,63,64" s59="3,11,19,27,35,43,51,57,58,59,60,61,62,63,64" s60="4,12,20,28,36,44,52,57,58,59,60,61,62,63,64" s61="5,13,21,29,37,45,53,57,58,59,60,61,62,63,64" s62="6,14,22,30,38,46,54,57,58,59,60,61,62,63,64" s63="7,15,23,31,39,47,55,57,58,59,60,61,62,63,64" s64="8,16,24,32,40,48,56,57,58,59,60,61,62,63,64" />
	</Custom>
</Document>

